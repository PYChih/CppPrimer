// Exercise 15.29:
// Repeat your program, but this time store shared_ptrs to objects of type
// Quote. Explain any discrepancy in the sum generated by the this version and
// the previous program.
// Quote_15_29.cc Quote_15_29.h
// g++ -c exercise_15_29.cc Quote_15_28.cc
// g++ exercise_15_29.o Quote_15_28.cc && ./a.out
#include <vector>
#include <memory>
#include "Quote_15_28.h"
using std::vector;
using std::cout;
using std::endl;
using std::shared_ptr;
using std::make_shared;
int main() {
  Bulk_quote b1("999-999-999", 10, 10, 0.1);
  Quote q1("qqq-qqq-qqq", 99);
  // cout << b1.net_price(20) << endl;
  // cout << q1.net_price(20) << endl;
  Quote *ptr;
  ptr = &b1;
  // cout << ptr->net_price(20) << endl;
  Quote q2 = q1;
  vector<Quote> bvec;
  bvec.push_back(q1);
  bvec.push_back(b1);
  for (auto book : bvec) {
    cout << book.net_price(20) << endl;
  }
  vector<shared_ptr<Quote>> book_vec;
  book_vec.push_back(make_shared<Quote>(q1));
  book_vec.push_back(make_shared<Bulk_quote>(b1));
  auto sp = make_shared<Bulk_quote>(b1);
  // cout << sp->net_price(20) << endl;
  // cout << book_vec[1]->net_price(20) << endl;
  // cout << q1.net_price(20) << endl;
  double total = 0;
  for (auto book : book_vec) {
    total += book->net_price(20);
    cout << book->net_price(20) << endl;
    (*book).debug(cout) << endl;
  }
  cout << "total : " << total << endl;
}